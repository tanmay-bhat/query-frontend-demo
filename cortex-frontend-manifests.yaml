apiVersion: apps/v1
kind: Deployment
metadata:
  name: cortex-query-frontend
  labels:
    app.kubernetes.io/name: cortex-query-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cortex-query-frontend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cortex-query-frontend
    spec:
      containers:
        - name: query-frontend
          image: "quay.io/cortexproject/cortex:v1.14.1"
          imagePullPolicy: IfNotPresent
          args:
            - "-target=query-frontend"
            - "-config.file=/etc/cortex/cortex.yaml"
          ports:
            - name: http
              containerPort: 9092
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /etc/cortex
      volumes:
        - name: config
          configMap:
            name: cortex-config
---
apiVersion: v1
kind: Service
metadata:
  name: cortex-query-frontend
  labels:
    app.kubernetes.io/name: cortex-query-frontend
spec:
  type: ClusterIP
  ports:
    - port: 9092
      protocol: TCP
      name: http
      targetPort: http
  selector:
    app.kubernetes.io/name: cortex-query-frontend
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cortex-config
  labels:
    app.kubernetes.io/name: cortex-query-frontend
data:
  cortex.yaml: |
    auth_enabled: false
    http_prefix:
    server:
      http_listen_port: 9092
    query_range:
      split_queries_by_interval: 24h
      cache_results: true
      results_cache:
        cache:
          enable_fifocache: true
          fifocache:
            max_size_bytes: 1GB
            validity: 24h
    frontend:
      downstream_url: https://prometheus.demo.do.prometheus.io
